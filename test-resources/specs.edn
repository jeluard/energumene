{"Browser top level"
 {:schema {:entities {:user {"name" 'str}}}
  :spec {:request {:method :get :uri "/"}
         :response {:status 200 :body {"jsonapi" "1.0.0" "data" nil "links" [{"user" {"href" "/users" "meta" {}}}]}}}}

 #_
 "Browser all users missing accept"
 #_{:schema {:entities {:user {(str "n" "a" "me") 'str}}}
  :request {:method :get :uri "/users"}
  :response {:status 415}}

 "GET all users when no user exists"
 {:schema {:entities {:user {"name" 'str}}}
  :specs {"er"
          {:request {:method :get :uri "/users" :headers {"accept" "application/vnd.api+json"}}
           :response {:status 200 :body {#_"links" #_{"self" ""}, "data" []} :headers {"content-type" "application/vnd.api+json"}}}}}

 #_
 "Pagination"
 #_
     {:spec {:request {:uri "GET /articles?page[number]=3&page[size]=1"}
         :response {:body {"meta" {"total-pages" 13}
                           "data" [{"type" "articles"
                                    "id" 3
                                    "attributes"{"title" "JSON API paints my bikeshed!"
                                                 "body" "The shortest article. Ever."
                                                 "created" "2015-05-22T14:56:29.000Z",
                                                 "updated" "2015-05-22T14:56:28.000Z"}}]
                           "links" {"self" "http://example.com/articles?page[number]=3&page[size]=1"
                                    "first" "http://example.com/articles?page[number]=1&page[size]=1"
                                    "prev" "http://example.com/articles?page[number]=2&page[size]=1"
                                    "next" "http://example.com/articles?page[number]=4&page[size]=1"
                                    "last" "http://example.com/articles?page[number]=13&page[size]=1"}}}}}

 #_
 "GET all users when 1 user exists"
 #_
 {:schema {:entities {:user {"name" 'str}}}
  :initial-entities [{:type "user" "name" "raoul"}]
  :request {:method :get :uri "/users" :headers {"accept" "application/vnd.api+json"}}
  :response {:status 200
             :headers {"content-type" "application/vnd.api+json"}
             :body {"links" {"self" ""}, "data" [{"type" "user", "id" 1, "attributes" {"name" "raoul"}}]}}}

 ; From http://jsonapi.org/examples/
 "Get with sparse fields"
 {:schema {:entities {"people" {"name" 'str "age" 'int "gender" 'str}
                      "article" {"title" 'str "body" 'str "created" 'str "updated" 'str "author" :schema/people}}}
  :initial-entities {"people" [{"id" 42 "name" "John" "age" 80 "gender" "male"}]
                     "article" [{"title" "JSON API paints my bikeshed!"
                                 "body" "The shortest article. Ever."
                                 "created" "2015-05-22T14:56:29.000Z"
                                 "updated" "2015-05-22T14:56:28.000Z"
                                 "author" {"type" "people" "id" 42}}]}
  :specs {"Complete entity"
          {:request {:method :get :uri "/articles" :headers {"accept" "application/vnd.api+json"}}
           :response {:status 200 :body {"data" [{"type" "article"
                                                  "id" 1
                                                  "attributes"
                                                         {"title" "JSON API paints my bikeshed!"
                                                          "body" "The shortest article. Ever."
                                                          "created" "2015-05-22T14:56:29.000Z"
                                                          "updated" "2015-05-22T14:56:28.000Z"}
                                                  "relationships" {"author" {"data" {"id" 42 "type" "people"}}}}]}
                      :headers {"content-type" "application/vnd.api+json"}}}
          "Included authors are present in the response"
          {:request {:method :get :uri "/articles?include=author" :headers {"accept" "application/vnd.api+json"}}
           :response {:status 200 :body {"data" [{"type" "article"
                                                  "id" 1
                                                  "attributes"
                                                         {"title" "JSON API paints my bikeshed!"
                                                          "body" "The shortest article. Ever."
                                                          "created" "2015-05-22T14:56:29.000Z"
                                                          "updated" "2015-05-22T14:56:28.000Z"}
                                                  "relationships" {"author" {"data" {"id" 42 "type" "people"}}}}]
                                         "included" [{"type" "people" "id" 42 "attributes" {"name" "John" "age" 80 "gender" "male"}}]}
                      :headers {"content-type" "application/vnd.api+json"}}}
          #_
              "2"
          #_{:request {:method :get :uri "/articles?include=author&fields[article]=title,body,author&fields[people]=name" :headers {"accept" "application/vnd.api+json"}}
           :response {:status 200 :body {"data" [{"type" "article"
                                                  "id" 1
                                                  "attributes"
                                                         {"title" "JSON API paints my bikeshed!"
                                                          "body" "The shortest article. Ever."}
                                                  "relationships" {"author" {"data" {"id" 42 "type" "people"}}}}]
                                         "included" [{"type" "people" "id" 42 "attributes" {"name" "John"}}]}
                      :headers {"content-type" "application/vnd.api+json"}}}
          #_"Missing author include is missing"
          #_{:request {:method :get :uri "GET /articles?include=author&fields[article]=title,body&fields[people]=name" :headers {"accept" "application/vnd.api+json"}}
           :response {:status 200 :body {"data" [{"type" "article"
                                                  "id" 1
                                                  "attributes"
                                                         {"title" "JSON API paints my bikeshed!"
                                                          "body" "The shortest article. Ever."}}]
                                         "included" [{"type" "people" "id" 42 "attributes" {"name" "John"}}]}
                      :headers {"content-type" "application/vnd.api+json"}}}}}}