;; Analyzed by ClojureScript 1.7.107
{:use-macros {intercept hipo.interceptor}, :excludes #{}, :name hipo.interpreter, :imports nil, :requires {set clojure.set, clojure.set clojure.set, attr hipo.attribute, hipo.attribute hipo.attribute, dom hipo.dom, hipo.dom hipo.dom, hic hipo.hiccup, hipo.hiccup hipo.hiccup, hipo.interceptor hipo.interceptor}, :uses nil, :defs {append-to-parent {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 70, :column 7, :end-line 70, :end-column 23, :arglists (quote ([el o m]))}, :name hipo.interpreter/append-to-parent, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 23, :method-params ([el o m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 3, :fn-var true, :arglists (quote ([el o m]))}, child-key {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 97, :column 8, :end-line 97, :end-column 17, :private true, :arglists (quote ([h]))}, :private true, :name hipo.interpreter/child-key, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 17, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h]))}, append-children! {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 28, :column 7, :end-line 28, :end-column 23, :arglists (quote ([el v m]))}, :name hipo.interpreter/append-children!, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 23, :method-params ([el v m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([el v m]))}, reconciliate-keyed-children! {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 100, :column 7, :end-line 100, :end-column 35, :arglists (quote ([el och nch {:keys [interceptors], :as m}])), :doc "Reconciliate a vector of children based on their associated key."}, :name hipo.interpreter/reconciliate-keyed-children!, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 35, :method-params ([el och nch p__12632]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 4, :fn-var true, :arglists (quote ([el och nch {:keys [interceptors], :as m}])), :doc "Reconciliate a vector of children based on their associated key."}, reconciliate-children! {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 171, :column 7, :end-line 171, :end-column 29, :arglists (quote ([el och nch {:keys [interceptors], :as m}]))}, :name hipo.interpreter/reconciliate-children!, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 29, :method-params ([el och nch p__12724]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 4, :fn-var true, :arglists (quote ([el och nch {:keys [interceptors], :as m}]))}, reconciliate! {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 197, :column 7, :end-line 197, :end-column 20, :arglists (quote ([el oh nh {:keys [interceptors], :as m}]))}, :name hipo.interpreter/reconciliate!, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 20, :method-params ([el oh nh p__12736]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 4, :fn-var true, :arglists (quote ([el oh nh {:keys [interceptors], :as m}]))}, reconciliate-non-keyed-children! {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 130, :column 7, :end-line 130, :end-column 39, :arglists (quote ([el och nch {:keys [interceptors], :as m}]))}, :name hipo.interpreter/reconciliate-non-keyed-children!, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 39, :method-params ([el och nch p__12704]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 4, :fn-var true, :arglists (quote ([el och nch {:keys [interceptors], :as m}]))}, keyed-children? {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 169, :column 7, :end-line 169, :end-column 22, :arglists (quote ([v]))}, :name hipo.interpreter/keyed-children?, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 22, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, create {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 76, :column 7, :end-line 76, :end-column 13, :arglists (quote ([o m]))}, :name hipo.interpreter/create, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 13, :method-params ([o m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o m]))}, default-create-element {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 37, :column 7, :end-line 37, :end-column 29, :arglists (quote ([ns tag attrs m]))}, :name hipo.interpreter/default-create-element, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 29, :method-params ([ns tag attrs m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 4, :fn-var true, :arglists (quote ([ns tag attrs m]))}, create-vector {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 51, :column 7, :end-line 51, :end-column 20, :arglists (quote ([h m]))}, :name hipo.interpreter/create-vector, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 20, :method-params ([h m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([h m]))}, reconciliate-attributes! {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 87, :column 7, :end-line 87, :end-column 31, :arglists (quote ([el ns tag om nm m]))}, :name hipo.interpreter/reconciliate-attributes!, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 31, :method-params ([el ns tag om nm m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 6, :fn-var true, :arglists (quote ([el ns tag om nm m]))}, reconciliate-vector! {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 181, :column 7, :end-line 181, :end-column 27, :arglists (quote ([el oh nh {:keys [interceptors], :as m}]))}, :name hipo.interpreter/reconciliate-vector!, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 27, :method-params ([el oh nh p__12729]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 4, :fn-var true, :arglists (quote ([el oh nh {:keys [interceptors], :as m}]))}, create-child {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 63, :column 7, :end-line 63, :end-column 19, :arglists (quote ([o m]))}, :name hipo.interpreter/create-child, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 19, :method-params ([o m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o m]))}, set-attribute! {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 8, :column 7, :end-line 8, :end-column 21, :arglists (quote ([el ns tag sok ov nv {:keys [interceptors], :as m}]))}, :name hipo.interpreter/set-attribute!, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 21, :method-params ([el ns tag sok ov nv p__12513]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 7, :fn-var true, :arglists (quote ([el ns tag sok ov nv {:keys [interceptors], :as m}]))}, keyed-children->indexed-map {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 98, :column 8, :end-line 98, :end-column 35, :private true, :arglists (quote ([v]))}, :private true, :name hipo.interpreter/keyed-children->indexed-map, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 35, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, create-element {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :line 45, :column 7, :end-line 45, :end-column 21, :arglists (quote ([ns tag attrs m]))}, :name hipo.interpreter/create-element, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/hipo/interpreter.cljs", :end-column 21, :method-params ([ns tag attrs m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 4, :fn-var true, :arglists (quote ([ns tag attrs m]))}}, :require-macros {hipo.interceptor hipo.interceptor}, :cljs.analyzer/constants {:seen #{:new-value :update-handler :update-attribute :remove vector? :insert :fn :hipo/key :index :else :replace el :name :value v map? :append o :move :create-element-fn :old-value .-parentElement or m hic/literal? nh nil? :count :remove-trailing :interceptors :target :remove-handler :remove-attribute h :reconciliate :clear}, :order [:interceptors :name :fn :update-handler :remove-handler :target :old-value :new-value :update-attribute :remove-attribute vector? v :create-element-fn h or hic/literal? o :hipo/key :move :value :index :insert :remove-trailing :count :remove :else :append :clear nh .-parentElement el :replace :reconciliate nil? m map?]}, :doc nil}