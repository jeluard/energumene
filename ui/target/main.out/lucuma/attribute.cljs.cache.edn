;; Analyzed by ClojureScript 1.7.107
{:use-macros nil, :excludes #{get}, :name lucuma.attribute, :imports nil, :requires {string clojure.string, clojure.string clojure.string, cljs.reader cljs.reader, u lucuma.util, lucuma.util lucuma.util}, :uses {read-string cljs.reader}, :defs {property->attribute {:name lucuma.attribute/property->attribute, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :line 9, :column 1, :end-line 9, :end-column 30, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :line 9, :column 11, :end-line 9, :end-column 30}}, attribute->property {:name lucuma.attribute/attribute->property, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :line 16, :column 1, :end-line 16, :end-column 30, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :line 16, :column 11, :end-line 16, :end-column 30}}, get {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :line 26, :column 7, :end-line 26, :end-column 10, :arglists (quote ([el n t])), :doc "Gets the value of a named attribute. Converts its value via property->attribute."}, :name lucuma.attribute/get, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :end-column 10, :method-params ([el n t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([el n t])), :doc "Gets the value of a named attribute. Converts its value via property->attribute."}, set! {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([el n v])), :doc "Sets the value of a named attribute. Converts its value via attribute->property.\n   If the value is not nil and not false, attribute is set; otherwise it is removed."}, :name lucuma.attribute/set!, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :end-column 11, :method-params ([el n v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 3, :fn-var true, :arglists (quote ([el n v])), :doc "Sets the value of a named attribute. Converts its value via attribute->property.\n   If the value is not nil and not false, attribute is set; otherwise it is removed."}, property-definition {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :line 46, :column 7, :end-line 46, :end-column 26, :arglists (quote ([get-fn set-fn])), :doc "Returns a property definition from getter/setter."}, :name lucuma.attribute/property-definition, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :end-column 26, :method-params ([get-fn set-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([get-fn set-fn])), :doc "Returns a property definition from getter/setter."}, attributes {:protocol-inline nil, :meta {:file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :line 52, :column 7, :end-line 52, :end-column 17, :arglists (quote ([el]))}, :name lucuma.attribute/attributes, :variadic false, :file "/Users/julien/.boot/cache/tmp/Users/julien/Documents/energumene/ui/139o/-yc3gxx/main.out/lucuma/attribute.cljs", :end-column 17, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:enumerable :get :else :number :default :string :configurable :keyword :set :hierarchy :boolean}, :order [:hierarchy :default :string :keyword :boolean :else :number :configurable :enumerable :get :set]}, :doc nil}